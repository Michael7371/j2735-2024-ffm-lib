// Generated by jextract

package j2735_2024_MessageFrame;

import java.lang.foreign.*;
import java.util.function.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct SchoolBusJ2945Slash1C {
 *     BOOLEAN_t flashingAmberLights;
 *     BOOLEAN_t flashingRedLights;
 *     BOOLEAN_t *studentsCrossingFront;
 *     BOOLEAN_t *studentsCrossingBehind;
 *     BOOLEAN_t *studentsLoading;
 *     BOOLEAN_t *studentsUnloading;
 *     BOOLEAN_t *wheelchairLiftInUse;
 *     BOOLEAN_t *emergencyExitOpen;
 *     BOOLEAN_t *emergencyRequestMedical;
 *     BOOLEAN_t *emergencyRequestFire;
 *     BOOLEAN_t *emergencyRequestPolice;
 *     asn_struct_ctx_t _asn_ctx;
 * }
 * }
 */
public class SchoolBusJ2945Slash1C {

    SchoolBusJ2945Slash1C() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        MessageFrame_h.C_INT.withName("flashingAmberLights"),
        MessageFrame_h.C_INT.withName("flashingRedLights"),
        MessageFrame_h.C_POINTER.withName("studentsCrossingFront"),
        MessageFrame_h.C_POINTER.withName("studentsCrossingBehind"),
        MessageFrame_h.C_POINTER.withName("studentsLoading"),
        MessageFrame_h.C_POINTER.withName("studentsUnloading"),
        MessageFrame_h.C_POINTER.withName("wheelchairLiftInUse"),
        MessageFrame_h.C_POINTER.withName("emergencyExitOpen"),
        MessageFrame_h.C_POINTER.withName("emergencyRequestMedical"),
        MessageFrame_h.C_POINTER.withName("emergencyRequestFire"),
        MessageFrame_h.C_POINTER.withName("emergencyRequestPolice"),
        asn_struct_ctx_s.layout().withName("_asn_ctx")
    ).withName("SchoolBusJ2945Slash1C");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfInt flashingAmberLights$LAYOUT = (OfInt)$LAYOUT.select(groupElement("flashingAmberLights"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingAmberLights
     * }
     */
    public static final OfInt flashingAmberLights$layout() {
        return flashingAmberLights$LAYOUT;
    }

    private static final long flashingAmberLights$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingAmberLights
     * }
     */
    public static final long flashingAmberLights$offset() {
        return flashingAmberLights$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingAmberLights
     * }
     */
    public static int flashingAmberLights(MemorySegment struct) {
        return struct.get(flashingAmberLights$LAYOUT, flashingAmberLights$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingAmberLights
     * }
     */
    public static void flashingAmberLights(MemorySegment struct, int fieldValue) {
        struct.set(flashingAmberLights$LAYOUT, flashingAmberLights$OFFSET, fieldValue);
    }

    private static final OfInt flashingRedLights$LAYOUT = (OfInt)$LAYOUT.select(groupElement("flashingRedLights"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingRedLights
     * }
     */
    public static final OfInt flashingRedLights$layout() {
        return flashingRedLights$LAYOUT;
    }

    private static final long flashingRedLights$OFFSET = 4;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingRedLights
     * }
     */
    public static final long flashingRedLights$offset() {
        return flashingRedLights$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingRedLights
     * }
     */
    public static int flashingRedLights(MemorySegment struct) {
        return struct.get(flashingRedLights$LAYOUT, flashingRedLights$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t flashingRedLights
     * }
     */
    public static void flashingRedLights(MemorySegment struct, int fieldValue) {
        struct.set(flashingRedLights$LAYOUT, flashingRedLights$OFFSET, fieldValue);
    }

    private static final AddressLayout studentsCrossingFront$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("studentsCrossingFront"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingFront
     * }
     */
    public static final AddressLayout studentsCrossingFront$layout() {
        return studentsCrossingFront$LAYOUT;
    }

    private static final long studentsCrossingFront$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingFront
     * }
     */
    public static final long studentsCrossingFront$offset() {
        return studentsCrossingFront$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingFront
     * }
     */
    public static MemorySegment studentsCrossingFront(MemorySegment struct) {
        return struct.get(studentsCrossingFront$LAYOUT, studentsCrossingFront$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingFront
     * }
     */
    public static void studentsCrossingFront(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(studentsCrossingFront$LAYOUT, studentsCrossingFront$OFFSET, fieldValue);
    }

    private static final AddressLayout studentsCrossingBehind$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("studentsCrossingBehind"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingBehind
     * }
     */
    public static final AddressLayout studentsCrossingBehind$layout() {
        return studentsCrossingBehind$LAYOUT;
    }

    private static final long studentsCrossingBehind$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingBehind
     * }
     */
    public static final long studentsCrossingBehind$offset() {
        return studentsCrossingBehind$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingBehind
     * }
     */
    public static MemorySegment studentsCrossingBehind(MemorySegment struct) {
        return struct.get(studentsCrossingBehind$LAYOUT, studentsCrossingBehind$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsCrossingBehind
     * }
     */
    public static void studentsCrossingBehind(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(studentsCrossingBehind$LAYOUT, studentsCrossingBehind$OFFSET, fieldValue);
    }

    private static final AddressLayout studentsLoading$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("studentsLoading"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsLoading
     * }
     */
    public static final AddressLayout studentsLoading$layout() {
        return studentsLoading$LAYOUT;
    }

    private static final long studentsLoading$OFFSET = 24;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsLoading
     * }
     */
    public static final long studentsLoading$offset() {
        return studentsLoading$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsLoading
     * }
     */
    public static MemorySegment studentsLoading(MemorySegment struct) {
        return struct.get(studentsLoading$LAYOUT, studentsLoading$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsLoading
     * }
     */
    public static void studentsLoading(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(studentsLoading$LAYOUT, studentsLoading$OFFSET, fieldValue);
    }

    private static final AddressLayout studentsUnloading$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("studentsUnloading"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsUnloading
     * }
     */
    public static final AddressLayout studentsUnloading$layout() {
        return studentsUnloading$LAYOUT;
    }

    private static final long studentsUnloading$OFFSET = 32;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsUnloading
     * }
     */
    public static final long studentsUnloading$offset() {
        return studentsUnloading$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsUnloading
     * }
     */
    public static MemorySegment studentsUnloading(MemorySegment struct) {
        return struct.get(studentsUnloading$LAYOUT, studentsUnloading$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *studentsUnloading
     * }
     */
    public static void studentsUnloading(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(studentsUnloading$LAYOUT, studentsUnloading$OFFSET, fieldValue);
    }

    private static final AddressLayout wheelchairLiftInUse$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("wheelchairLiftInUse"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *wheelchairLiftInUse
     * }
     */
    public static final AddressLayout wheelchairLiftInUse$layout() {
        return wheelchairLiftInUse$LAYOUT;
    }

    private static final long wheelchairLiftInUse$OFFSET = 40;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *wheelchairLiftInUse
     * }
     */
    public static final long wheelchairLiftInUse$offset() {
        return wheelchairLiftInUse$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *wheelchairLiftInUse
     * }
     */
    public static MemorySegment wheelchairLiftInUse(MemorySegment struct) {
        return struct.get(wheelchairLiftInUse$LAYOUT, wheelchairLiftInUse$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *wheelchairLiftInUse
     * }
     */
    public static void wheelchairLiftInUse(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(wheelchairLiftInUse$LAYOUT, wheelchairLiftInUse$OFFSET, fieldValue);
    }

    private static final AddressLayout emergencyExitOpen$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("emergencyExitOpen"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyExitOpen
     * }
     */
    public static final AddressLayout emergencyExitOpen$layout() {
        return emergencyExitOpen$LAYOUT;
    }

    private static final long emergencyExitOpen$OFFSET = 48;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyExitOpen
     * }
     */
    public static final long emergencyExitOpen$offset() {
        return emergencyExitOpen$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyExitOpen
     * }
     */
    public static MemorySegment emergencyExitOpen(MemorySegment struct) {
        return struct.get(emergencyExitOpen$LAYOUT, emergencyExitOpen$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyExitOpen
     * }
     */
    public static void emergencyExitOpen(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(emergencyExitOpen$LAYOUT, emergencyExitOpen$OFFSET, fieldValue);
    }

    private static final AddressLayout emergencyRequestMedical$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("emergencyRequestMedical"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestMedical
     * }
     */
    public static final AddressLayout emergencyRequestMedical$layout() {
        return emergencyRequestMedical$LAYOUT;
    }

    private static final long emergencyRequestMedical$OFFSET = 56;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestMedical
     * }
     */
    public static final long emergencyRequestMedical$offset() {
        return emergencyRequestMedical$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestMedical
     * }
     */
    public static MemorySegment emergencyRequestMedical(MemorySegment struct) {
        return struct.get(emergencyRequestMedical$LAYOUT, emergencyRequestMedical$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestMedical
     * }
     */
    public static void emergencyRequestMedical(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(emergencyRequestMedical$LAYOUT, emergencyRequestMedical$OFFSET, fieldValue);
    }

    private static final AddressLayout emergencyRequestFire$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("emergencyRequestFire"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestFire
     * }
     */
    public static final AddressLayout emergencyRequestFire$layout() {
        return emergencyRequestFire$LAYOUT;
    }

    private static final long emergencyRequestFire$OFFSET = 64;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestFire
     * }
     */
    public static final long emergencyRequestFire$offset() {
        return emergencyRequestFire$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestFire
     * }
     */
    public static MemorySegment emergencyRequestFire(MemorySegment struct) {
        return struct.get(emergencyRequestFire$LAYOUT, emergencyRequestFire$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestFire
     * }
     */
    public static void emergencyRequestFire(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(emergencyRequestFire$LAYOUT, emergencyRequestFire$OFFSET, fieldValue);
    }

    private static final AddressLayout emergencyRequestPolice$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("emergencyRequestPolice"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestPolice
     * }
     */
    public static final AddressLayout emergencyRequestPolice$layout() {
        return emergencyRequestPolice$LAYOUT;
    }

    private static final long emergencyRequestPolice$OFFSET = 72;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestPolice
     * }
     */
    public static final long emergencyRequestPolice$offset() {
        return emergencyRequestPolice$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestPolice
     * }
     */
    public static MemorySegment emergencyRequestPolice(MemorySegment struct) {
        return struct.get(emergencyRequestPolice$LAYOUT, emergencyRequestPolice$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t *emergencyRequestPolice
     * }
     */
    public static void emergencyRequestPolice(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(emergencyRequestPolice$LAYOUT, emergencyRequestPolice$OFFSET, fieldValue);
    }

    private static final GroupLayout _asn_ctx$LAYOUT = (GroupLayout)$LAYOUT.select(groupElement("_asn_ctx"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static final GroupLayout _asn_ctx$layout() {
        return _asn_ctx$LAYOUT;
    }

    private static final long _asn_ctx$OFFSET = 80;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static final long _asn_ctx$offset() {
        return _asn_ctx$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static MemorySegment _asn_ctx(MemorySegment struct) {
        return struct.asSlice(_asn_ctx$OFFSET, _asn_ctx$LAYOUT.byteSize());
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static void _asn_ctx(MemorySegment struct, MemorySegment fieldValue) {
        MemorySegment.copy(fieldValue, 0L, struct, _asn_ctx$OFFSET, _asn_ctx$LAYOUT.byteSize());
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}


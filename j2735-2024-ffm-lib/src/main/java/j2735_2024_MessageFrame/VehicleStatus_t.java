// Generated by jextract

package j2735_2024_MessageFrame;

/**
 * {@snippet lang=c :
 * typedef struct VehicleStatus {
 *     ExteriorLights_t *lights;
 *     LightbarInUse_t *lightBar;
 *     struct WiperSet *wipers;
 *     struct BrakeSystemStatus *brakeStatus;
 *     BrakeAppliedPressure_t *brakePressure;
 *     CoefficientOfFriction_t *roadFriction;
 *     SunSensor_t *sunData;
 *     RainSensor_t *rainData;
 *     AmbientAirTemperature_t *airTemp;
 *     AmbientAirPressure_t *airPres;
 *     struct VehicleStatus__steering {
 *         SteeringWheelAngle_t angle;
 *         SteeringWheelAngleConfidence_t *confidence;
 *         SteeringWheelAngleRateOfChange_t *rate;
 *         DrivingWheelAngle_t *wheels;
 *         asn_struct_ctx_t _asn_ctx;
 *     } *steering;
 *     struct VehicleStatus__accelSets {
 *         struct AccelerationSet4Way *accel4way;
 *         VerticalAccelerationThreshold_t *vertAccelThres;
 *         YawRateConfidence_t *yawRateCon;
 *         AccelerationConfidence_t *hozAccelCon;
 *         struct ConfidenceSet *confidenceSet;
 *         asn_struct_ctx_t _asn_ctx;
 *     } *accelSets;
 *     struct VehicleStatus__object {
 *         ObstacleDistance_t obDist;
 *         Common_Angle_t obDirect;
 *         DDateTime_t dateTime;
 *         asn_struct_ctx_t _asn_ctx;
 *     } *object;
 *     struct FullPositionVector *fullPos;
 *     ThrottlePosition_t *throttlePos;
 *     struct SpeedandHeadingandThrottleConfidence *speedHeadC;
 *     SpeedConfidence_t *speedC;
 *     struct VehicleStatus__vehicleData {
 *         VehicleHeight_t height;
 *         BumperHeights_t bumpers;
 *         VehicleMass_t mass;
 *         TrailerWeight_t trailerWeight;
 *         VehicleType_t type;
 *         asn_struct_ctx_t _asn_ctx;
 *     } *vehicleData;
 *     struct VehicleIdent *vehicleIdent;
 *     struct J1939data *j1939data;
 *     struct VehicleStatus__weatherReport {
 *         EssPrecipYesNo_t isRaining;
 *         EssPrecipRate_t *rainRate;
 *         EssPrecipSituation_t *precipSituation;
 *         EssSolarRadiation_t *solarRadiation;
 *         EssMobileFriction_t *friction;
 *         asn_struct_ctx_t _asn_ctx;
 *     } *weatherReport;
 *     GNSSstatus_t *gnssStatus;
 *     asn_struct_ctx_t _asn_ctx;
 * } VehicleStatus_t
 * }
 */
public class VehicleStatus_t extends VehicleStatus {

    VehicleStatus_t() {
        // Should not be called directly
    }
}


// Generated by jextract

package j2735_2024_MessageFrame;

import java.lang.foreign.*;
import java.util.function.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct CfgVehicleClass {
 *     BOOLEAN_t motorcycles;
 *     BOOLEAN_t passengerCars;
 *     BOOLEAN_t other2axle4tireSingleUnitVehs;
 *     BOOLEAN_t buses;
 *     BOOLEAN_t twoAxle6TireSingleUnitTrucks;
 *     BOOLEAN_t threeAxleSingleUnitTrucks;
 *     BOOLEAN_t fourOrMoreAxleSingleUnitTrucks;
 *     BOOLEAN_t fourOrFewerAxleSingleTrailerTrucks;
 *     BOOLEAN_t fiveAxleSingleTrailerTrucks;
 *     BOOLEAN_t sixOrMoreAxleSingleTrailerTrucks;
 *     BOOLEAN_t fiveOrFewerAxleMultiTrailerTrucks;
 *     BOOLEAN_t sixAxleMultiTrailerTrucks;
 *     BOOLEAN_t sevenOrMoreAxleMultiTrailerTrucks;
 *     asn_struct_ctx_t _asn_ctx;
 * }
 * }
 */
public class CfgVehicleClass {

    CfgVehicleClass() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        MessageFrame_h.C_INT.withName("motorcycles"),
        MessageFrame_h.C_INT.withName("passengerCars"),
        MessageFrame_h.C_INT.withName("other2axle4tireSingleUnitVehs"),
        MessageFrame_h.C_INT.withName("buses"),
        MessageFrame_h.C_INT.withName("twoAxle6TireSingleUnitTrucks"),
        MessageFrame_h.C_INT.withName("threeAxleSingleUnitTrucks"),
        MessageFrame_h.C_INT.withName("fourOrMoreAxleSingleUnitTrucks"),
        MessageFrame_h.C_INT.withName("fourOrFewerAxleSingleTrailerTrucks"),
        MessageFrame_h.C_INT.withName("fiveAxleSingleTrailerTrucks"),
        MessageFrame_h.C_INT.withName("sixOrMoreAxleSingleTrailerTrucks"),
        MessageFrame_h.C_INT.withName("fiveOrFewerAxleMultiTrailerTrucks"),
        MessageFrame_h.C_INT.withName("sixAxleMultiTrailerTrucks"),
        MessageFrame_h.C_INT.withName("sevenOrMoreAxleMultiTrailerTrucks"),
        MemoryLayout.paddingLayout(4),
        asn_struct_ctx_s.layout().withName("_asn_ctx")
    ).withName("CfgVehicleClass");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfInt motorcycles$LAYOUT = (OfInt)$LAYOUT.select(groupElement("motorcycles"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t motorcycles
     * }
     */
    public static final OfInt motorcycles$layout() {
        return motorcycles$LAYOUT;
    }

    private static final long motorcycles$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t motorcycles
     * }
     */
    public static final long motorcycles$offset() {
        return motorcycles$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t motorcycles
     * }
     */
    public static int motorcycles(MemorySegment struct) {
        return struct.get(motorcycles$LAYOUT, motorcycles$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t motorcycles
     * }
     */
    public static void motorcycles(MemorySegment struct, int fieldValue) {
        struct.set(motorcycles$LAYOUT, motorcycles$OFFSET, fieldValue);
    }

    private static final OfInt passengerCars$LAYOUT = (OfInt)$LAYOUT.select(groupElement("passengerCars"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t passengerCars
     * }
     */
    public static final OfInt passengerCars$layout() {
        return passengerCars$LAYOUT;
    }

    private static final long passengerCars$OFFSET = 4;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t passengerCars
     * }
     */
    public static final long passengerCars$offset() {
        return passengerCars$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t passengerCars
     * }
     */
    public static int passengerCars(MemorySegment struct) {
        return struct.get(passengerCars$LAYOUT, passengerCars$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t passengerCars
     * }
     */
    public static void passengerCars(MemorySegment struct, int fieldValue) {
        struct.set(passengerCars$LAYOUT, passengerCars$OFFSET, fieldValue);
    }

    private static final OfInt other2axle4tireSingleUnitVehs$LAYOUT = (OfInt)$LAYOUT.select(groupElement("other2axle4tireSingleUnitVehs"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t other2axle4tireSingleUnitVehs
     * }
     */
    public static final OfInt other2axle4tireSingleUnitVehs$layout() {
        return other2axle4tireSingleUnitVehs$LAYOUT;
    }

    private static final long other2axle4tireSingleUnitVehs$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t other2axle4tireSingleUnitVehs
     * }
     */
    public static final long other2axle4tireSingleUnitVehs$offset() {
        return other2axle4tireSingleUnitVehs$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t other2axle4tireSingleUnitVehs
     * }
     */
    public static int other2axle4tireSingleUnitVehs(MemorySegment struct) {
        return struct.get(other2axle4tireSingleUnitVehs$LAYOUT, other2axle4tireSingleUnitVehs$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t other2axle4tireSingleUnitVehs
     * }
     */
    public static void other2axle4tireSingleUnitVehs(MemorySegment struct, int fieldValue) {
        struct.set(other2axle4tireSingleUnitVehs$LAYOUT, other2axle4tireSingleUnitVehs$OFFSET, fieldValue);
    }

    private static final OfInt buses$LAYOUT = (OfInt)$LAYOUT.select(groupElement("buses"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t buses
     * }
     */
    public static final OfInt buses$layout() {
        return buses$LAYOUT;
    }

    private static final long buses$OFFSET = 12;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t buses
     * }
     */
    public static final long buses$offset() {
        return buses$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t buses
     * }
     */
    public static int buses(MemorySegment struct) {
        return struct.get(buses$LAYOUT, buses$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t buses
     * }
     */
    public static void buses(MemorySegment struct, int fieldValue) {
        struct.set(buses$LAYOUT, buses$OFFSET, fieldValue);
    }

    private static final OfInt twoAxle6TireSingleUnitTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("twoAxle6TireSingleUnitTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t twoAxle6TireSingleUnitTrucks
     * }
     */
    public static final OfInt twoAxle6TireSingleUnitTrucks$layout() {
        return twoAxle6TireSingleUnitTrucks$LAYOUT;
    }

    private static final long twoAxle6TireSingleUnitTrucks$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t twoAxle6TireSingleUnitTrucks
     * }
     */
    public static final long twoAxle6TireSingleUnitTrucks$offset() {
        return twoAxle6TireSingleUnitTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t twoAxle6TireSingleUnitTrucks
     * }
     */
    public static int twoAxle6TireSingleUnitTrucks(MemorySegment struct) {
        return struct.get(twoAxle6TireSingleUnitTrucks$LAYOUT, twoAxle6TireSingleUnitTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t twoAxle6TireSingleUnitTrucks
     * }
     */
    public static void twoAxle6TireSingleUnitTrucks(MemorySegment struct, int fieldValue) {
        struct.set(twoAxle6TireSingleUnitTrucks$LAYOUT, twoAxle6TireSingleUnitTrucks$OFFSET, fieldValue);
    }

    private static final OfInt threeAxleSingleUnitTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("threeAxleSingleUnitTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t threeAxleSingleUnitTrucks
     * }
     */
    public static final OfInt threeAxleSingleUnitTrucks$layout() {
        return threeAxleSingleUnitTrucks$LAYOUT;
    }

    private static final long threeAxleSingleUnitTrucks$OFFSET = 20;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t threeAxleSingleUnitTrucks
     * }
     */
    public static final long threeAxleSingleUnitTrucks$offset() {
        return threeAxleSingleUnitTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t threeAxleSingleUnitTrucks
     * }
     */
    public static int threeAxleSingleUnitTrucks(MemorySegment struct) {
        return struct.get(threeAxleSingleUnitTrucks$LAYOUT, threeAxleSingleUnitTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t threeAxleSingleUnitTrucks
     * }
     */
    public static void threeAxleSingleUnitTrucks(MemorySegment struct, int fieldValue) {
        struct.set(threeAxleSingleUnitTrucks$LAYOUT, threeAxleSingleUnitTrucks$OFFSET, fieldValue);
    }

    private static final OfInt fourOrMoreAxleSingleUnitTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("fourOrMoreAxleSingleUnitTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrMoreAxleSingleUnitTrucks
     * }
     */
    public static final OfInt fourOrMoreAxleSingleUnitTrucks$layout() {
        return fourOrMoreAxleSingleUnitTrucks$LAYOUT;
    }

    private static final long fourOrMoreAxleSingleUnitTrucks$OFFSET = 24;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrMoreAxleSingleUnitTrucks
     * }
     */
    public static final long fourOrMoreAxleSingleUnitTrucks$offset() {
        return fourOrMoreAxleSingleUnitTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrMoreAxleSingleUnitTrucks
     * }
     */
    public static int fourOrMoreAxleSingleUnitTrucks(MemorySegment struct) {
        return struct.get(fourOrMoreAxleSingleUnitTrucks$LAYOUT, fourOrMoreAxleSingleUnitTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrMoreAxleSingleUnitTrucks
     * }
     */
    public static void fourOrMoreAxleSingleUnitTrucks(MemorySegment struct, int fieldValue) {
        struct.set(fourOrMoreAxleSingleUnitTrucks$LAYOUT, fourOrMoreAxleSingleUnitTrucks$OFFSET, fieldValue);
    }

    private static final OfInt fourOrFewerAxleSingleTrailerTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("fourOrFewerAxleSingleTrailerTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrFewerAxleSingleTrailerTrucks
     * }
     */
    public static final OfInt fourOrFewerAxleSingleTrailerTrucks$layout() {
        return fourOrFewerAxleSingleTrailerTrucks$LAYOUT;
    }

    private static final long fourOrFewerAxleSingleTrailerTrucks$OFFSET = 28;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrFewerAxleSingleTrailerTrucks
     * }
     */
    public static final long fourOrFewerAxleSingleTrailerTrucks$offset() {
        return fourOrFewerAxleSingleTrailerTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrFewerAxleSingleTrailerTrucks
     * }
     */
    public static int fourOrFewerAxleSingleTrailerTrucks(MemorySegment struct) {
        return struct.get(fourOrFewerAxleSingleTrailerTrucks$LAYOUT, fourOrFewerAxleSingleTrailerTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fourOrFewerAxleSingleTrailerTrucks
     * }
     */
    public static void fourOrFewerAxleSingleTrailerTrucks(MemorySegment struct, int fieldValue) {
        struct.set(fourOrFewerAxleSingleTrailerTrucks$LAYOUT, fourOrFewerAxleSingleTrailerTrucks$OFFSET, fieldValue);
    }

    private static final OfInt fiveAxleSingleTrailerTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("fiveAxleSingleTrailerTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveAxleSingleTrailerTrucks
     * }
     */
    public static final OfInt fiveAxleSingleTrailerTrucks$layout() {
        return fiveAxleSingleTrailerTrucks$LAYOUT;
    }

    private static final long fiveAxleSingleTrailerTrucks$OFFSET = 32;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveAxleSingleTrailerTrucks
     * }
     */
    public static final long fiveAxleSingleTrailerTrucks$offset() {
        return fiveAxleSingleTrailerTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveAxleSingleTrailerTrucks
     * }
     */
    public static int fiveAxleSingleTrailerTrucks(MemorySegment struct) {
        return struct.get(fiveAxleSingleTrailerTrucks$LAYOUT, fiveAxleSingleTrailerTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveAxleSingleTrailerTrucks
     * }
     */
    public static void fiveAxleSingleTrailerTrucks(MemorySegment struct, int fieldValue) {
        struct.set(fiveAxleSingleTrailerTrucks$LAYOUT, fiveAxleSingleTrailerTrucks$OFFSET, fieldValue);
    }

    private static final OfInt sixOrMoreAxleSingleTrailerTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("sixOrMoreAxleSingleTrailerTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixOrMoreAxleSingleTrailerTrucks
     * }
     */
    public static final OfInt sixOrMoreAxleSingleTrailerTrucks$layout() {
        return sixOrMoreAxleSingleTrailerTrucks$LAYOUT;
    }

    private static final long sixOrMoreAxleSingleTrailerTrucks$OFFSET = 36;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixOrMoreAxleSingleTrailerTrucks
     * }
     */
    public static final long sixOrMoreAxleSingleTrailerTrucks$offset() {
        return sixOrMoreAxleSingleTrailerTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixOrMoreAxleSingleTrailerTrucks
     * }
     */
    public static int sixOrMoreAxleSingleTrailerTrucks(MemorySegment struct) {
        return struct.get(sixOrMoreAxleSingleTrailerTrucks$LAYOUT, sixOrMoreAxleSingleTrailerTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixOrMoreAxleSingleTrailerTrucks
     * }
     */
    public static void sixOrMoreAxleSingleTrailerTrucks(MemorySegment struct, int fieldValue) {
        struct.set(sixOrMoreAxleSingleTrailerTrucks$LAYOUT, sixOrMoreAxleSingleTrailerTrucks$OFFSET, fieldValue);
    }

    private static final OfInt fiveOrFewerAxleMultiTrailerTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("fiveOrFewerAxleMultiTrailerTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveOrFewerAxleMultiTrailerTrucks
     * }
     */
    public static final OfInt fiveOrFewerAxleMultiTrailerTrucks$layout() {
        return fiveOrFewerAxleMultiTrailerTrucks$LAYOUT;
    }

    private static final long fiveOrFewerAxleMultiTrailerTrucks$OFFSET = 40;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveOrFewerAxleMultiTrailerTrucks
     * }
     */
    public static final long fiveOrFewerAxleMultiTrailerTrucks$offset() {
        return fiveOrFewerAxleMultiTrailerTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveOrFewerAxleMultiTrailerTrucks
     * }
     */
    public static int fiveOrFewerAxleMultiTrailerTrucks(MemorySegment struct) {
        return struct.get(fiveOrFewerAxleMultiTrailerTrucks$LAYOUT, fiveOrFewerAxleMultiTrailerTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t fiveOrFewerAxleMultiTrailerTrucks
     * }
     */
    public static void fiveOrFewerAxleMultiTrailerTrucks(MemorySegment struct, int fieldValue) {
        struct.set(fiveOrFewerAxleMultiTrailerTrucks$LAYOUT, fiveOrFewerAxleMultiTrailerTrucks$OFFSET, fieldValue);
    }

    private static final OfInt sixAxleMultiTrailerTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("sixAxleMultiTrailerTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixAxleMultiTrailerTrucks
     * }
     */
    public static final OfInt sixAxleMultiTrailerTrucks$layout() {
        return sixAxleMultiTrailerTrucks$LAYOUT;
    }

    private static final long sixAxleMultiTrailerTrucks$OFFSET = 44;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixAxleMultiTrailerTrucks
     * }
     */
    public static final long sixAxleMultiTrailerTrucks$offset() {
        return sixAxleMultiTrailerTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixAxleMultiTrailerTrucks
     * }
     */
    public static int sixAxleMultiTrailerTrucks(MemorySegment struct) {
        return struct.get(sixAxleMultiTrailerTrucks$LAYOUT, sixAxleMultiTrailerTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t sixAxleMultiTrailerTrucks
     * }
     */
    public static void sixAxleMultiTrailerTrucks(MemorySegment struct, int fieldValue) {
        struct.set(sixAxleMultiTrailerTrucks$LAYOUT, sixAxleMultiTrailerTrucks$OFFSET, fieldValue);
    }

    private static final OfInt sevenOrMoreAxleMultiTrailerTrucks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("sevenOrMoreAxleMultiTrailerTrucks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BOOLEAN_t sevenOrMoreAxleMultiTrailerTrucks
     * }
     */
    public static final OfInt sevenOrMoreAxleMultiTrailerTrucks$layout() {
        return sevenOrMoreAxleMultiTrailerTrucks$LAYOUT;
    }

    private static final long sevenOrMoreAxleMultiTrailerTrucks$OFFSET = 48;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BOOLEAN_t sevenOrMoreAxleMultiTrailerTrucks
     * }
     */
    public static final long sevenOrMoreAxleMultiTrailerTrucks$offset() {
        return sevenOrMoreAxleMultiTrailerTrucks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BOOLEAN_t sevenOrMoreAxleMultiTrailerTrucks
     * }
     */
    public static int sevenOrMoreAxleMultiTrailerTrucks(MemorySegment struct) {
        return struct.get(sevenOrMoreAxleMultiTrailerTrucks$LAYOUT, sevenOrMoreAxleMultiTrailerTrucks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BOOLEAN_t sevenOrMoreAxleMultiTrailerTrucks
     * }
     */
    public static void sevenOrMoreAxleMultiTrailerTrucks(MemorySegment struct, int fieldValue) {
        struct.set(sevenOrMoreAxleMultiTrailerTrucks$LAYOUT, sevenOrMoreAxleMultiTrailerTrucks$OFFSET, fieldValue);
    }

    private static final GroupLayout _asn_ctx$LAYOUT = (GroupLayout)$LAYOUT.select(groupElement("_asn_ctx"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static final GroupLayout _asn_ctx$layout() {
        return _asn_ctx$LAYOUT;
    }

    private static final long _asn_ctx$OFFSET = 56;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static final long _asn_ctx$offset() {
        return _asn_ctx$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static MemorySegment _asn_ctx(MemorySegment struct) {
        return struct.asSlice(_asn_ctx$OFFSET, _asn_ctx$LAYOUT.byteSize());
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * asn_struct_ctx_t _asn_ctx
     * }
     */
    public static void _asn_ctx(MemorySegment struct, MemorySegment fieldValue) {
        MemorySegment.copy(fieldValue, 0L, struct, _asn_ctx$OFFSET, _asn_ctx$LAYOUT.byteSize());
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

